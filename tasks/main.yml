---


# - name: Check the version of CentOS
#   command: cat /etc/centos-release
#   register: os_check
#   ignore_errors: yes

# - name: Check if version of Ubuntu
#   shell: |
#     lsb_release -d
#   register: os_check
#   ignore_errors: yes

- pause:
    prompt: "Please Type Domain Name"
    echo: yes
  register: mattermost_doamin_name_result

- pause:
    prompt: "Please Type Your Email ID"
    echo: yes
  register: your_email_id_result

- set_fact:
        mattermost_doamin_name: "{{ mattermost_doamin_name_result.user_input }}"
        your_email_id: "{{ your_email_id_result.user_input }}"

-   name: Add MariaDB - CentOS 7
        lineinfile:
            path: /etc/yum.repos.d/MariaDB10.repo
            line: "{{ item }}"
            create: yes
        loop:
            - "[mariadb]"
            - name = MariaDB
            - baseurl = http://yum.mariadb.org/10.1/centos7-amd64
            - gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
            - gpgcheck=1
        when: 
            - os_check.stdout | regex_search("CentOS Linux 7")

    # -   name: Remove old entries - CentOS 7
    #     command: yum remove mariadb-server mariadb mariadb-libs -y
    #     when: 
    #         - os_check.stdout | regex_search("CentOS Linux 7")

-   name: CleanUP cache - CentOS 7
    command: yum clean all
    when: 
        - os_check.stdout | regex_search("CentOS Linux 7")

-   name: Initiate Mariadb - CentOS 7
    yum: 
        name: "{{ item }}"
        state: present
    loop:
        - MariaDB-server 
        - MariaDB-client 
        - MySQL-python
    when: 
        - os_check.stdout | regex_search("CentOS Linux 7")

-   name: Start the MYSQL service - CentOS 7
    service:
        name: mariadb
        enabled: yes
        state: started
    when: 
        - os_check.stdout | regex_search("CentOS Linux 7")

- name: Create Mattermost Directory
  file:
    path: ~/mattermost
    state: directory

- name: Get Mattermost
  get_url:
    url: https://releases.mattermost.com/{{ matter_version }}/mattermost-{{ matter_version }}-linux-amd64.tar.gz
    dest: ~/mattermost/

- name: Unarchive the file
  unarchive:
      src: ~/mattermost/mattermost-{{ matter_version }}-linux-amd64.tar.gz
      dest: ~/mattermost


- name: Create Mattermost Directory
  file:
    path: /opt/mattermost/data
    state: directory


- name: Synchronization files
  synchronize:
    src: ~/mattermost/mattermost/
    dest: /opt/mattermost/

- name: Ensure group "mattermost" exists
  group:
    name: mattermost
    state: present

- name: Add the user Mattermost
  user:
    name: mattermost
    group: mattermost
    system: true

- name: Change file ownership, group and permissions
  file:
    path: /opt/mattermost
    owner: mattermost
    group: mattermost
    recurse: yes
    mode: 'g+w'

- name: Creating MYSQL User
  command: mysql --host=localhost --user=root  -e "CREATE USER 'mmuser'@'%' IDENTIFIED BY 'mmuser';"
  ignore_errors: yes

- name: Creating MYSQL MMUSER DB
  command: mysql --host=localhost --user=root  -e "CREATE DATABASE mattermost;"
  ignore_errors: yes

- name: Granting Permissions
  command: mysql --host=localhost --user=root  -e "GRANT ALL PRIVILEGES ON mattermost.* TO 'mmuser'@'%';"
  ignore_errors: yes

- name: Set Mattermost Config file
  template:
    src: "matter_config.json.j2"
    dest: /opt/mattermost/config/config.json

- name: Set Mattermost Config file
  template:
    src: "mattermost.service.j2"
    dest: /lib/systemd/system/mattermost.service
  when: os_check.stdout | regex_search("Ubuntu 20") or os_check.stdout | regex_search("Ubuntu 18") 

- name: Set Mattermost Config file
  template:
    src: "mattermost.service.j2"
    dest: /etc/systemd/system/mattermost.service
    mode: '0664'
  when:
        - os_check.stdout | regex_search("CentOS")

- name: reload service mattermost, in all cases
  systemd:
    name: mattermost
    daemon_reload: yes
    state: started
    enabled: yes

- name: Sets Nginx conf file
  template:
    src: "mattermost_nginx.conf.j2"
    dest: /etc/nginx/sites-available/{{ mattermost_doamin_name }}
  when: os_check.stdout | regex_search("Ubuntu 20") or os_check.stdout | regex_search("Ubuntu 18") 

- name: Sets Nginx conf file
  template:
    src: "mattermost_nginx.conf.j2"
    dest: /etc/nginx/conf.d/{{ mattermost_doamin_name }}.conf
  when:
        - os_check.stdout | regex_search("CentOS")
    
- name: Create symbolic link 
  file:
    src: /etc/nginx/sites-available/{{ mattermost_doamin_name }}
    dest: /etc/nginx/sites-enabled/{{ mattermost_doamin_name }}
    state: link
  when: os_check.stdout | regex_search("Ubuntu 20") or os_check.stdout | regex_search("Ubuntu 18") 

# - name: Restart service Nginx, if not started
#   service:
#     name: nginx
#     state: restarted